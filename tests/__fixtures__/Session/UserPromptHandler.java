/**
 * !!! PLEASE DO NOT EDIT THIS FILE !!!
 *
 * This source file, even though checked in, is auto-generated based on the
 * current development within the WebDriver Bidi spec. Any changes to this
 * file need to come from the specification.
 */

package org.openqa.selenium.bidirectional.session;

import java.util.Map;
import java.util.HashMap;
import java.util.List;
import java.util.ArrayList;
import org.openqa.selenium.bidirectional.*;

/**
 * Auto-generated class for WebDriver BiDi protocol
 * Represents parameters for session.UserPromptHandler command
 */
public class UserPromptHandler {

    /**
     * Creates a new UserPromptHandler instance
     */
    public UserPromptHandler(Session.UserPromptHandlerType alert, Session.UserPromptHandlerType beforeUnload, Session.UserPromptHandlerType confirm, Session.UserPromptHandlerType default, Session.UserPromptHandlerType file, Session.UserPromptHandlerType prompt) {
        this.alert = alert;
        this.beforeUnload = beforeUnload;
        this.confirm = confirm;
        this.default = default;
        this.file = file;
        this.prompt = prompt;
        
    }

    private final Session.UserPromptHandlerType alert;

    /**
     * Gets the alert property
     * @return Session.UserPromptHandlerType value
     */
    public Session.UserPromptHandlerType getAlert() {
        return this.alert;
    }

    private final Session.UserPromptHandlerType beforeUnload;

    /**
     * Gets the beforeUnload property
     * @return Session.UserPromptHandlerType value
     */
    public Session.UserPromptHandlerType getBeforeUnload() {
        return this.beforeUnload;
    }

    private final Session.UserPromptHandlerType confirm;

    /**
     * Gets the confirm property
     * @return Session.UserPromptHandlerType value
     */
    public Session.UserPromptHandlerType getConfirm() {
        return this.confirm;
    }

    private final Session.UserPromptHandlerType default;

    /**
     * Gets the default property
     * @return Session.UserPromptHandlerType value
     */
    public Session.UserPromptHandlerType getDefault() {
        return this.default;
    }

    private final Session.UserPromptHandlerType file;

    /**
     * Gets the file property
     * @return Session.UserPromptHandlerType value
     */
    public Session.UserPromptHandlerType getFile() {
        return this.file;
    }

    private final Session.UserPromptHandlerType prompt;

    /**
     * Gets the prompt property
     * @return Session.UserPromptHandlerType value
     */
    public Session.UserPromptHandlerType getPrompt() {
        return this.prompt;
    }

    /**
     * Converts this object to a map for use with BiDi protocol
     * @return Map representation of this object
     */
    public Map<String, Object> asMap() {
        Map<String, Object> toReturn = new HashMap<>();
        toReturn.put("alert", this.alert);
        toReturn.put("beforeUnload", this.beforeUnload);
        toReturn.put("confirm", this.confirm);
        toReturn.put("default", this.default);
        toReturn.put("file", this.file);
        toReturn.put("prompt", this.prompt);
        return toReturn;
    }

}