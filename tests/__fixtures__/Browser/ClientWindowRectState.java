/**
 * !!! PLEASE DO NOT EDIT THIS FILE !!!
 *
 * This source file, even though checked in, is auto-generated based on the
 * current development within the WebDriver Bidi spec. Any changes to this
 * file need to come from the specification.
 */

package org.openqa.selenium.bidirectional.browser;

import java.util.Map;
import java.util.HashMap;
import java.util.List;
import java.util.ArrayList;
import org.openqa.selenium.bidirectional.*;

/**
 * Auto-generated class for WebDriver BiDi protocol
 * Represents parameters for browser.ClientWindowRectState command
 */
public class ClientWindowRectState {

    /**
     * Creates a new ClientWindowRectState instance
     */
    public ClientWindowRectState(Long width, Long height, Integer x, Integer y) {
        this.width = width;
        this.height = height;
        this.x = x;
        this.y = y;
        this.state = "normal";
    }

    private final normal state;

    /**
     * Gets the state property
     * @return normal value
     */
    public normal getState() {
        return this.state;
    }

    private final Long width;

    /**
     * Gets the width property
     * @return Long value
     */
    public Long getWidth() {
        return this.width;
    }

    private final Long height;

    /**
     * Gets the height property
     * @return Long value
     */
    public Long getHeight() {
        return this.height;
    }

    private final Integer x;

    /**
     * Gets the x property
     * @return Integer value
     */
    public Integer getX() {
        return this.x;
    }

    private final Integer y;

    /**
     * Gets the y property
     * @return Integer value
     */
    public Integer getY() {
        return this.y;
    }

    /**
     * Converts this object to a map for use with BiDi protocol
     * @return Map representation of this object
     */
    public Map<String, Object> asMap() {
        Map<String, Object> toReturn = new HashMap<>();
        toReturn.put("state", this.state);
        toReturn.put("width", this.width);
        toReturn.put("height", this.height);
        toReturn.put("x", this.x);
        toReturn.put("y", this.y);
        return toReturn;
    }

}