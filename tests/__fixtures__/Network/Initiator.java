/**
 * !!! PLEASE DO NOT EDIT THIS FILE !!!
 *
 * This source file, even though checked in, is auto-generated based on the
 * current development within the WebDriver Bidi spec. Any changes to this
 * file need to come from the specification.
 */

package org.openqa.selenium.bidirectional.network;

import java.util.Map;
import java.util.HashMap;
import java.util.List;
import java.util.ArrayList;
import org.openqa.selenium.bidirectional.*;

/**
 * Auto-generated class for WebDriver BiDi protocol
 * Represents parameters for network.Initiator command
 */
public class Initiator {

    /**
     * Creates a new Initiator instance
     */
    public Initiator(Long columnNumber, Long lineNumber, Network.Request request, Script.StackTrace stackTrace, Object type) {
        this.columnNumber = columnNumber;
        this.lineNumber = lineNumber;
        this.request = request;
        this.stackTrace = stackTrace;
        this.type = type;
    }

    private final Long columnNumber;

    /**
     * Gets the columnNumber property
     * @return Long value
     */
    public Long getColumnNumber() {
        return this.columnNumber;
    }

    private final Long lineNumber;

    /**
     * Gets the lineNumber property
     * @return Long value
     */
    public Long getLineNumber() {
        return this.lineNumber;
    }

    private final Network.Request request;

    /**
     * Gets the request property
     * @return Network.Request value
     */
    public Network.Request getRequest() {
        return this.request;
    }

    private final Script.StackTrace stackTrace;

    /**
     * Gets the stackTrace property
     * @return Script.StackTrace value
     */
    public Script.StackTrace getStackTrace() {
        return this.stackTrace;
    }

    private final Object type;

    /**
     * Gets the type property
     * @return Object value
     */
    public Object getType() {
        return this.type;
    }

    /**
     * Converts this object to a map for use with BiDi protocol
     * @return Map representation of this object
     */
    public Map<String, Object> asMap() {
        Map<String, Object> toReturn = new HashMap<>();
        toReturn.put("columnNumber", this.columnNumber);
        toReturn.put("lineNumber", this.lineNumber);
        toReturn.put("request", this.request);
        toReturn.put("stackTrace", this.stackTrace);
        toReturn.put("type", this.type);
        return toReturn;
    }

}