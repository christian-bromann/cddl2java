/**
 * !!! PLEASE DO NOT EDIT THIS FILE !!!
 *
 * This source file, even though checked in, is auto-generated based on the
 * current development within the WebDriver Bidi spec. Any changes to this
 * file need to come from the specification.
 */

package org.openqa.selenium.bidirectional.network;

import java.util.Map;
import java.util.HashMap;
import java.util.List;
import java.util.ArrayList;
import org.openqa.selenium.bidirectional.*;

/**
 * Auto-generated class for WebDriver BiDi protocol
 * Represents parameters for network.FetchTimingInfo command
 */
public class FetchTimingInfo {

    /**
     * Creates a new FetchTimingInfo instance
     */
    public FetchTimingInfo(Float timeOrigin, Float requestTime, Float redirectStart, Float redirectEnd, Float fetchStart, Float dnsStart, Float dnsEnd, Float connectStart, Float connectEnd, Float tlsStart, Float requestStart, Float responseStart, Float responseEnd) {
        this.timeOrigin = timeOrigin;
        this.requestTime = requestTime;
        this.redirectStart = redirectStart;
        this.redirectEnd = redirectEnd;
        this.fetchStart = fetchStart;
        this.dnsStart = dnsStart;
        this.dnsEnd = dnsEnd;
        this.connectStart = connectStart;
        this.connectEnd = connectEnd;
        this.tlsStart = tlsStart;
        this.requestStart = requestStart;
        this.responseStart = responseStart;
        this.responseEnd = responseEnd;
        
    }

    private final Float timeOrigin;

    /**
     * Gets the timeOrigin property
     * @return Float value
     */
    public Float getTimeOrigin() {
        return this.timeOrigin;
    }

    private final Float requestTime;

    /**
     * Gets the requestTime property
     * @return Float value
     */
    public Float getRequestTime() {
        return this.requestTime;
    }

    private final Float redirectStart;

    /**
     * Gets the redirectStart property
     * @return Float value
     */
    public Float getRedirectStart() {
        return this.redirectStart;
    }

    private final Float redirectEnd;

    /**
     * Gets the redirectEnd property
     * @return Float value
     */
    public Float getRedirectEnd() {
        return this.redirectEnd;
    }

    private final Float fetchStart;

    /**
     * Gets the fetchStart property
     * @return Float value
     */
    public Float getFetchStart() {
        return this.fetchStart;
    }

    private final Float dnsStart;

    /**
     * Gets the dnsStart property
     * @return Float value
     */
    public Float getDnsStart() {
        return this.dnsStart;
    }

    private final Float dnsEnd;

    /**
     * Gets the dnsEnd property
     * @return Float value
     */
    public Float getDnsEnd() {
        return this.dnsEnd;
    }

    private final Float connectStart;

    /**
     * Gets the connectStart property
     * @return Float value
     */
    public Float getConnectStart() {
        return this.connectStart;
    }

    private final Float connectEnd;

    /**
     * Gets the connectEnd property
     * @return Float value
     */
    public Float getConnectEnd() {
        return this.connectEnd;
    }

    private final Float tlsStart;

    /**
     * Gets the tlsStart property
     * @return Float value
     */
    public Float getTlsStart() {
        return this.tlsStart;
    }

    private final Float requestStart;

    /**
     * Gets the requestStart property
     * @return Float value
     */
    public Float getRequestStart() {
        return this.requestStart;
    }

    private final Float responseStart;

    /**
     * Gets the responseStart property
     * @return Float value
     */
    public Float getResponseStart() {
        return this.responseStart;
    }

    private final Float responseEnd;

    /**
     * Gets the responseEnd property
     * @return Float value
     */
    public Float getResponseEnd() {
        return this.responseEnd;
    }

    /**
     * Converts this object to a map for use with BiDi protocol
     * @return Map representation of this object
     */
    public Map<String, Object> asMap() {
        Map<String, Object> toReturn = new HashMap<>();
        toReturn.put("timeOrigin", this.timeOrigin);
        toReturn.put("requestTime", this.requestTime);
        toReturn.put("redirectStart", this.redirectStart);
        toReturn.put("redirectEnd", this.redirectEnd);
        toReturn.put("fetchStart", this.fetchStart);
        toReturn.put("dnsStart", this.dnsStart);
        toReturn.put("dnsEnd", this.dnsEnd);
        toReturn.put("connectStart", this.connectStart);
        toReturn.put("connectEnd", this.connectEnd);
        toReturn.put("tlsStart", this.tlsStart);
        toReturn.put("requestStart", this.requestStart);
        toReturn.put("responseStart", this.responseStart);
        toReturn.put("responseEnd", this.responseEnd);
        return toReturn;
    }

}