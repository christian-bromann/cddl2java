/**
 * !!! PLEASE DO NOT EDIT THIS FILE !!!
 *
 * This source file, even though checked in, is auto-generated based on the
 * current development within the WebDriver Bidi spec. Any changes to this
 * file need to come from the specification.
 */

package org.openqa.selenium.bidirectional.browsingcontext;

import java.util.Map;
import java.util.HashMap;
import java.util.List;
import java.util.ArrayList;
import org.openqa.selenium.bidirectional.*;

/**
 * Auto-generated class for WebDriver BiDi protocol
 * Represents parameters for browsingContext.Info command
 */
public class Info {

    /**
     * Creates a new Info instance
     */
    public Info(Object children, String clientWindow, String context, Object originalOpener, String url, String userContext, Object parent) {
        this.children = children;
        this.clientWindow = clientWindow;
        this.context = context;
        this.originalOpener = originalOpener;
        this.url = url;
        this.userContext = userContext;
        this.parent = parent;
    }

    private final Object children;

    /**
     * Gets the children property
     * @return Object value
     */
    public Object getChildren() {
        return this.children;
    }

    private final String clientWindow;

    /**
     * Gets the clientWindow property
     * @return String value
     */
    public String getClientWindow() {
        return this.clientWindow;
    }

    private final String context;

    /**
     * Gets the context property
     * @return String value
     */
    public String getContext() {
        return this.context;
    }

    private final Object originalOpener;

    /**
     * Gets the originalOpener property
     * @return Object value
     */
    public Object getOriginalOpener() {
        return this.originalOpener;
    }

    private final String url;

    /**
     * Gets the url property
     * @return String value
     */
    public String getUrl() {
        return this.url;
    }

    private final String userContext;

    /**
     * Gets the userContext property
     * @return String value
     */
    public String getUserContext() {
        return this.userContext;
    }

    private final Object parent;

    /**
     * Gets the parent property
     * @return Object value
     */
    public Object getParent() {
        return this.parent;
    }

    /**
     * Converts this object to a map for use with BiDi protocol
     * @return Map representation of this object
     */
    public Map<String, Object> asMap() {
        Map<String, Object> toReturn = new HashMap<>();
        toReturn.put("children", this.children);
        toReturn.put("clientWindow", this.clientWindow);
        toReturn.put("context", this.context);
        toReturn.put("originalOpener", this.originalOpener);
        toReturn.put("url", this.url);
        toReturn.put("userContext", this.userContext);
        toReturn.put("parent", this.parent);
        return toReturn;
    }

}