/**
 * !!! PLEASE DO NOT EDIT THIS FILE !!!
 *
 * This source file, even though checked in, is auto-generated based on the
 * current development within the WebDriver Bidi spec. Any changes to this
 * file need to come from the specification.
 */

package org.openqa.selenium.bidirectional.browsingcontext;

import java.util.Map;
import java.util.HashMap;
import java.util.List;
import java.util.ArrayList;
import org.openqa.selenium.bidirectional.*;

/**
 * Auto-generated class for WebDriver BiDi protocol
 * Represents parameters for browsingContext.CreateParameters command
 */
public class CreateParameters {

    /**
     * Creates a new CreateParameters instance
     */
    public CreateParameters(BrowsingContext.CreateType type, String referenceContext, Boolean background, String userContext) {
        this.type = type;
        this.referenceContext = referenceContext;
        this.background = background;
        this.userContext = userContext;
        
    }

    private final BrowsingContext.CreateType type;

    /**
     * Gets the type property
     * @return BrowsingContext.CreateType value
     */
    public BrowsingContext.CreateType getType() {
        return this.type;
    }

    private final String referenceContext;

    /**
     * Gets the referenceContext property
     * @return String value
     */
    public String getReferenceContext() {
        return this.referenceContext;
    }

    private final Boolean background;

    /**
     * Gets the background property
     * @return Boolean value
     */
    public Boolean getBackground() {
        return this.background;
    }

    private final String userContext;

    /**
     * Gets the userContext property
     * @return String value
     */
    public String getUserContext() {
        return this.userContext;
    }

    /**
     * Converts this object to a map for use with BiDi protocol
     * @return Map representation of this object
     */
    public Map<String, Object> asMap() {
        Map<String, Object> toReturn = new HashMap<>();
        toReturn.put("type", this.type);
        toReturn.put("referenceContext", this.referenceContext);
        toReturn.put("background", this.background);
        toReturn.put("userContext", this.userContext);
        return toReturn;
    }

}