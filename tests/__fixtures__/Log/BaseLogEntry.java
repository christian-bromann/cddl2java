/**
 * !!! PLEASE DO NOT EDIT THIS FILE !!!
 *
 * This source file, even though checked in, is auto-generated based on the
 * current development within the WebDriver Bidi spec. Any changes to this
 * file need to come from the specification.
 */

package org.openqa.selenium.bidirectional.log;

import java.util.Map;
import java.util.HashMap;
import java.util.List;
import java.util.ArrayList;
import org.openqa.selenium.bidirectional.*;

/**
 * Auto-generated class for WebDriver BiDi protocol
 * Represents parameters for log.BaseLogEntry command
 */
public class BaseLogEntry {

    /**
     * Creates a new BaseLogEntry instance
     */
    public BaseLogEntry(Log.Level level, Script.Source source, Object text, Long timestamp, Script.StackTrace stackTrace) {
        this.level = level;
        this.source = source;
        this.text = text;
        this.timestamp = timestamp;
        this.stackTrace = stackTrace;
        
    }

    private final Log.Level level;

    /**
     * Gets the level property
     * @return Log.Level value
     */
    public Log.Level getLevel() {
        return this.level;
    }

    private final Script.Source source;

    /**
     * Gets the source property
     * @return Script.Source value
     */
    public Script.Source getSource() {
        return this.source;
    }

    private final Object text;

    /**
     * Gets the text property
     * @return Object value
     */
    public Object getText() {
        return this.text;
    }

    private final Long timestamp;

    /**
     * Gets the timestamp property
     * @return Long value
     */
    public Long getTimestamp() {
        return this.timestamp;
    }

    private final Script.StackTrace stackTrace;

    /**
     * Gets the stackTrace property
     * @return Script.StackTrace value
     */
    public Script.StackTrace getStackTrace() {
        return this.stackTrace;
    }

    /**
     * Converts this object to a map for use with BiDi protocol
     * @return Map representation of this object
     */
    public Map<String, Object> asMap() {
        Map<String, Object> toReturn = new HashMap<>();
        toReturn.put("level", this.level);
        toReturn.put("source", this.source);
        toReturn.put("text", this.text);
        toReturn.put("timestamp", this.timestamp);
        toReturn.put("stackTrace", this.stackTrace);
        return toReturn;
    }

}